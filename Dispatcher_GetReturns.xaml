<Activity mc:Ignorable="sap sap2010" x:Class="Dispatcher_GetReturns" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:SovosLibrary_SF_API.CustomFunctions;assembly=SovosLibrary.SF.API" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sh="clr-namespace:SovosLibrary_SF_API.HttpRequests;assembly=SovosLibrary.SF.API" xmlns:su="clr-namespace:SovosLibrary_SF_API.UiFunctions;assembly=SovosLibrary.SF.API" xmlns:sur="clr-namespace:SovosLibrary_SF_API.UiFunctions.Returns;assembly=SovosLibrary.SF.API" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_dtReturns" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <this:Dispatcher_GetReturns.in_Config>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
  </this:Dispatcher_GetReturns.in_Config>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1219,2900</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Dispatcher_GetReturns_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>SovosLibrary_SF_API.UiFunctions.Returns</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>SovosLibrary_SF_API.UiFunctions</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>SovosLibrary_SF_API.HttpRequests</x:String>
      <x:String>UiPath.Activities.System</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>SovosLibrary_SF_API.CustomFunctions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>SovosLibrary.SF.API</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Dispatcher_GetReturns" sap:VirtualizedContainerService.HintSize="558,2835" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Token" />
      <Variable x:TypeArguments="x:String" Name="BearerToken" />
      <Variable x:TypeArguments="x:String" Name="OrganizationName" />
      <Variable x:TypeArguments="x:Int32" Name="Month" />
      <Variable x:TypeArguments="x:Int32" Name="Year" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[new Dictionary(Of String, String)]" Name="dictClients" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(Of String)]" Name="ListSelectedClients" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(Of String)]" Name="ListSelectedStates" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictFailedClients" />
      <Variable x:TypeArguments="x:String" Name="SelectedState" />
      <Variable x:TypeArguments="x:String" Name="SovosFilingToken" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="496,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;Dispatcher_GetReturns starts&quot;]" />
    <sur:CheckReturnsPageIsOpen DisplayName="Sovos Filing - CheckReturnsPageIsOpen" sap:VirtualizedContainerService.HintSize="496,25" sap2010:WorkflowViewState.IdRef="CheckReturnsPageIsOpen_1" />
    <ui:Comment sap:VirtualizedContainerService.HintSize="496,56" sap2010:WorkflowViewState.IdRef="Comment_3" Text="// Get Following properties: Token and period." />
    <su:GetTokenFromWebsite DisplayName="GetTokenFromWebsite - SovosFilingToken" sap:VirtualizedContainerService.HintSize="496,80" sap2010:WorkflowViewState.IdRef="GetTokenFromWebsite_1" out_Token="[Token]" />
    <sur:GetCurrentPeriod out_Month="{x:Null}" DisplayName="GetCurrentPeriod - Month and year" sap:VirtualizedContainerService.HintSize="496,133" sap2010:WorkflowViewState.IdRef="GetCurrentPeriod_1" out_MonthIndex="[Month]" out_Year="[Year]" />
    <ui:Comment sap:VirtualizedContainerService.HintSize="496,75" sap2010:WorkflowViewState.IdRef="Comment_4" Text="// Let user choose the required clients (and states if they need it)" />
    <Assign DisplayName="Assign ListSelectedClients" sap:VirtualizedContainerService.HintSize="496,82" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[ListSelectedClients]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[dictClients.Keys.ToList]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="Get List of states and display form" sap:VirtualizedContainerService.HintSize="496,519" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:List(x:String)" Name="ListStates" />
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictStates" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <sh:GET_States DisplayName="GET_States - ListStates" sap:VirtualizedContainerService.HintSize="434,133" sap2010:WorkflowViewState.IdRef="GET_States_1" in_Token="[Token]" out_dictStates="[dictStates]" />
      <Assign DisplayName="Assign ListStates" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_7">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[ListStates]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)">[dictStates.Keys.ToList]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logic\Forms\DisplayFormMultipleStates.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Logic\Forms\DisplayFormMultipleStates.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_ListStates">[ListStates]</InArgument>
          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_ListSelectedState">[ListSelectedStates]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <ui:Comment sap:VirtualizedContainerService.HintSize="496,75" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// For each client, get returns with EDI files and append to datatable" />
    <Sequence DisplayName="Get Returns of specific states from all clients" sap:VirtualizedContainerService.HintSize="496,504" sap2010:WorkflowViewState.IdRef="Sequence_14">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="BodyFilter" />
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictFailedClients" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap2010:Annotation.AnnotationText="Add List of states in body filter" DisplayName="Assign BodyFilter" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[BodyFilter]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_Config("API_GetReturnsList_Body_FilterByState").ToString.
Replace("&lt;LIST_STATES&gt;", String.Join(",",ListSelectedStates))]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <sc:GetReturnsFromAllClients DisplayName="GetReturnsFromAllClients - dtReturns" sap:VirtualizedContainerService.HintSize="434,239" sap2010:WorkflowViewState.IdRef="GetReturnsFromAllClients_1" in_BodyFilter="[BodyFilter]" in_Month="[Month]" in_Token="[Token]" in_Year="[Year]" out_dictFailedClients="[dictFailedClients]" out_dtReturns="[out_dtReturns]" />
    </Sequence>
    <ui:Comment sap:VirtualizedContainerService.HintSize="496,56" sap2010:WorkflowViewState.IdRef="Comment_6" Text="// Add status column" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logic\Dispatcher_AddStatusColumn.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="496,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Logic\Dispatcher_AddStatusColumn.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dtTransactionsData">[out_dtReturns]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnName">[in_Config("TransactionsTableFile_StatusColumn").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_DefaultStatus">[in_Config("TransactionsTableFile_DefaultStatus").ToString]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If Condition="[dictClients.Count &gt; 0]" DisplayName="If some client has failed" sap:VirtualizedContainerService.HintSize="496,302" sap2010:WorkflowViewState.IdRef="If_8">
      <If.Then>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logic\Popups\ShowFailedClients.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Logic\Popups\ShowFailedClients.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dictFailedClients">[dictFailedClients]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="496,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Message="[&quot;Dispatcher_GetReturns ends&quot;]" />
  </Sequence>
</Activity>